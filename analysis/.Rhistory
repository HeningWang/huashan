library(optimx)
library(lattice)
require(tigerstats)
rm(list=ls())
plots_dir<- file.path(getwd(),"plots")
if(!dir.exists(plots_dir)) dir.create(plots_dir, recursive = TRUE, showWarnings = FALSE)
setwd("~/GitHub/taishan/analysis")
data <- read.csv(file = "../data/taishan_annotiert.csv")
subj_info <-read.csv(file = "../data/taishan_subj_info.csv")
#show how many pps
sum(xtabs(~id,data=data)/135)
# show lists
xtabs(~id+list, data=data)
round(xtabs(~list, data=data)/180)
#show conditions
xtabs(~id+conditions, data=data)
vp1 <- subset(data, id=="626ed4e5300dd")
vp1$annotation <- droplevels(as.factor(vp1$annotation))
#exclude pps with more than three s.e. away from mean experiment time
hist(subj_info$time_in_minutes)
mean(subj_info$time_in_minutes)
sd(subj_info$time_in_minutes)
x <- mean(subj_info$time_in_minutes) + 3 * sd(subj_info$time_in_minutes)
y <- mean(subj_info$time_in_minutes) - 3 * sd(subj_info$time_in_minutes)
filter(subj_info, time_in_minutes < y | time_in_minutes > x)
#coercion NA value
data <- subset(data, !is.na(data$annotation))
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
pdf(file = file.path(plots_dir,"percentage_annotation_condtions.pdf"))
dev.off()
# barplot of frequency of annotations
q <- barchartGC(~annotation, data = data, main = "frequency of different adjective orders from annotation")
q
pdf(file = file.path(plots_dir,"frequncy_annotation.pdf"))
dev.off()
library(tidyr)
library(ggplot2)
library(gridExtra)
library(trimr)
library(stringr)
library(lme4)
library(lmerTest)
library(dplyr)
library(effects)
library(optimx)
library(lattice)
require(tigerstats)
rm(list=ls())
setwd("~/GitHub/taishan/analysis")
plots_dir<- file.path(getwd(),"plots")
if(!dir.exists(plots_dir)) dir.create(plots_dir, recursive = TRUE, showWarnings = FALSE)
data <- read.csv(file = "../data/taishan_annotiert.csv")
subj_info <-read.csv(file = "../data/taishan_subj_info.csv")
#show how many pps
sum(xtabs(~id,data=data)/135)
# show lists
xtabs(~id+list, data=data)
round(xtabs(~list, data=data)/180)
#show conditions
xtabs(~id+conditions, data=data)
vp1 <- subset(data, id=="626ed4e5300dd")
vp1$annotation <- droplevels(as.factor(vp1$annotation))
#exclude pps with more than three s.e. away from mean experiment time
hist(subj_info$time_in_minutes)
mean(subj_info$time_in_minutes)
sd(subj_info$time_in_minutes)
x <- mean(subj_info$time_in_minutes) + 3 * sd(subj_info$time_in_minutes)
y <- mean(subj_info$time_in_minutes) - 3 * sd(subj_info$time_in_minutes)
filter(subj_info, time_in_minutes < y | time_in_minutes > x)
#coercion NA value
data <- subset(data, !is.na(data$annotation))
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
pdf(file = file.path(plots_dir,"percentage_annotation_condtions.pdf"))
dev.off()
# barplot of frequency of annotations
q <- barchartGC(~annotation, data = data, main = "frequency of different adjective orders from annotation")
q
pdf(file = file.path(plots_dir,"frequncy_annotation.pdf"))
dev.off()
library(tidyr)
library(ggplot2)
library(gridExtra)
library(trimr)
library(stringr)
library(lme4)
library(lmerTest)
library(dplyr)
library(effects)
library(optimx)
library(lattice)
require(tigerstats)
rm(list=ls())
setwd("~/GitHub/taishan/analysis")
plots_dir<- file.path(getwd(),"plots")
if(!dir.exists(plots_dir)) dir.create(plots_dir, recursive = TRUE, showWarnings = FALSE)
data <- read.csv(file = "../data/taishan_annotiert.csv")
subj_info <-read.csv(file = "../data/taishan_subj_info.csv")
data <- subset(data, !is.na(data$annotation))
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
pdf(file = file.path(plots_dir,"percentage_annotation_condtions.pdf"))
dev.off()
q <- barchartGC(~annotation, data = data, main = "frequency of different adjective orders from annotation")
q
p
?barchartGC
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("red","green")
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("red","green"),
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("dark red","green"),
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("maroon","dark red","brown","crimson","red",
"green"),
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("maroon","dark red","brown","crimson","red",
"green","forest green","dark green", "sea green", "yellow green"),
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("maroon","dark red","brown","crimson","red",
"green","forest green","dark green", "sea green", "yellow green",
"blue","medium blue","dark blue","navy"),
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
p
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("maroon","dark red","brown","crimson","red",
"green","forest green","dark green","sea green", "yellow green",
"blue","medium blue","dark blue","navy"),
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("maroon","dark red","brown","red",
"green","forest green","dark green","sea green", "yellow green",
"blue","medium blue","dark blue","navy"),
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
?barplot
# barplot of frequency of annotation in correlation with conditions
p <- barchartGC(~conditions+annotation, data = data, stack=TRUE, type = "percent",
col = c("C"="maroon","dark red","brown","red",
"green","forest green","dark green","sea green", "yellow green",
"blue","medium blue","dark blue","navy"),
main = "Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")
p
xtabs(~annotation+conditions, data = data)
dat <- as.dataframe(xtabs(~annotation+conditions, data = data))
dat <- as.df(xtabs(~annotation+conditions, data = data))
?as.data.frame
dat <- as.data.frame(xtabs(~annotation+conditions, data = data))
View(data)
View(dat)
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(stat = identity)
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(stat = "identity")
o
data_filler <- subset(data, str_sub(data$conditions, 1, 1) == "f")
data <- droplevels(subset(data, str_sub(data$conditions, 1, 1) != "f"))
dat <- as.data.frame(xtabs(~annotation+conditions, data = data))
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")
o
# set up factors
data$combination <- as.factor(ifelse(str_sub(data$conditions, 3, 4)=="cf", "color_form",
ifelse(str_sub(data$conditions, 3, 4)=="dc", "dimension_color",
"dimension_form")))
data$relevant_property <- as.factor(ifelse(str_sub(data$conditions, 1, 1)== "e", "first",
ifelse(str_sub(data$conditions, 1, 1)== "z", "second",
"both")))
#subset freq
dat <- as.data.frame(xtabs(~annotation+combination+relevant_property, data = data))
View(dat)
colors()
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red1",
"CFD" = "green",
"D" = "green",
"DC" = "forest green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "yellow green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
o <- ggplot(data = dat, aes(x = combination + relevant_property, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red1",
"CFD" = "green",
"D" = "green",
"DC" = "forest green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "yellow green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red1",
"CFD" = "green",
"D" = "green",
"DC" = "forest green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "yellow green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
#subset freq
dat <- as.data.frame(xtabs(~conditions+relevant_property, data = data))
#subset freq
dat <- as.data.frame(xtabs(~conditions, data = data))
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red1",
"CFD" = "green",
"D" = "green",
"DC" = "forest green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "yellow green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
#subset freq
dat <- as.data.frame(xtabs(~conditions+annotation, data = data))
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red1",
"CFD" = "green",
"D" = "green",
"DC" = "forest green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "yellow green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "rosybrown",
"CFD" = "magenta",
"D" = "green",
"DC" = "yellow green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "forest green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red3",
"CFD" = "magenta",
"D" = "green",
"DC" = "yellow green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "forest green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
main("Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red3",
"CFD" = "magenta",
"D" = "green",
"DC" = "yellow green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "forest green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
ggtitle("Percentage of diffenrent adjective orders from annotaion \n in correlation with conditions")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red3",
"CFD" = "magenta",
"D" = "green",
"DC" = "yellow green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "forest green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
o <- ggplot(data = dat, aes(x = conditions, y = Freq ,fill = annotation))+
geom_bar(position = "fill", stat = "identity")+
ggtitle("Percentage of diffenrent adjective orders from annotaion in correlation with conditions")+
scale_fill_manual(values = c("C" = "red",
"CD" = "dark red",
"CDF" = "brown",
"CF" = "red3",
"CFD" = "magenta",
"D" = "green",
"DC" = "yellow green",
"DCF" = "dark green",
"DF" = "sea green",
"DFC" = "forest green",
"F" = "blue",
"FC" = "medium blue",
"FD" = "dark blue",
"FDC" = "navy"))
o
q
library(emmeans)
install.packages("emmeans")
emmeans(m0.2, list(pairwise ~ Group), adjust = "tukey")
library(emmeans)
rm(list = ls())
load ("data_preprocessed_huashan.RData")
library(tidyr)
library(ggplot2)
library(gridExtra)
library(trimr)
library(stringr)
library(lme4)
library(lmerTest)
library(dplyr)
library(effects)
library(optimx)
library(emmeans)
# set up contrast coding
mean(data$prefer_first_1st)
contrasts(data$combination)
contrasts(data$relevant_property)
contrasts(data$dist) <- c(-0.5, 0.5)
colnames(contrasts(data$dist)) <- c("sharp")
#maximaze the random effect structure
rm(list = ls())
setwd("~/GitHub/huashan/analysis")
load ("data_preprocessed_huashan.RData")
library(tidyr)
library(ggplot2)
library(gridExtra)
library(trimr)
library(stringr)
library(lme4)
library(lmerTest)
library(dplyr)
library(effects)
library(optimx)
library(emmeans)
# set up contrast coding
mean(data$prefer_first_1st)
contrasts(data$combination)
contrasts(data$relevant_property)
contrasts(data$dist) <- c(-0.5, 0.5)
colnames(contrasts(data$dist)) <- c("sharp")
#maximaze the random effect structure
# log transformation
data$sli<-(data$prefer_first_1st+50.5)/101
m0 <- lmer(data$sli~relevant_property*combination*dist
+(1|id)
+(1|item), data=data)
m0.1 <- lmer(log(sli)~relevant_property*combination*dist
+(1|id)
+(1|item), data=data)
data$transli<-qlogis(jitter(data$sli))
m0.2 <- lmer(transli~relevant_property*combination*dist
+(1|id)
+(1|item), data=data)
par(mfrow=c(1,3))
qqnorm(residuals(m0), main = "default value")
qqnorm(residuals(m0.1), main = "value log transformed")
qqnorm(residuals(m0.2), main = "value logit transformed")
# use m0.2 for inference statistic
summary(m0.2)
anova(m0.2)
step(m0.2)
emmeans(m0.2, list(pairwise ~ Group), adjust = "tukey")
#subset data for analysis of interaction
data_cf <- subset(data, combination == "color_form")
data_d <- subset(data, combination == "dimension_form" | combination == "dimension_color")
data_df <- subset(data_d, combination == "dimension_form")
data_dc <- subset(data_d, combination == "dimension_color")
# analyse cf
data_cf$combination <- as.factor(droplevels(data_cf$combination))
m_cf <- lmer(transli~relevant_property*dist
+(1|id)
+(1|item), data=data_cf)
subset()
summary(m_cf)
anova(m_cf)
plot(allEffects(m_cf))
interaction.plot(x.factor = data_cf$relevanty_property,
trace.factor = data_cf$dist,
response = data_cf$prefer_first_1st)
# analyse d
data_d$combination <- as.factor(droplevels(data_d$combination))
m_d <- lmer(transli~combination*relevant_property*dist
+(1|id)
+(1|item), data=data_d)
summary(m_d)
anova(m_d)
# analyse dc
data_dc$combination <- as.factor(droplevels(data_dc$combination))
m_dc <- lmer(transli~relevant_property*dist
+(1|id)
+(1|item), data=data_dc)
summary(m_dc)
anova(m_dc)
# analyse df
data_df$combination <- as.factor(droplevels(data_df$combination))
m_df <- lmer(transli~relevant_property*dist
+(1|id)
+(1|item), data=data_df)
summary(m_d)
anova(m_d)
m1 <-  update(m0, .~.-combination:dist:relevant_property)
anova(m1,m0)
m2 <-  update(m1, .~.-combination:dist)
anova(m2,m1)
m3 <-  update(m2, .~.-dist:relevant_property)
anova(m3,m2)
m4 <-  update(m3, .~.-combination:relevant_property)
anova(m4,m3)
m5 <-  update(m4, .~.-combination)
anova(m5,m4)
m6 <-  update(m5, .~.-dist)
anova(m6,m5)
m7 <-  update(m6, .~.-relevant_property)
anova(m7,m6)
emmeans(m0.2, list(pairwise ~ Group), adjust = "tukey")
emmeans(m0.2, list(pairwise ~ Group), adjust = "tukey", pbkrtest.limit = 9548)
emmeans(m0.2, list(pairwise ~ Group), adjust = "tukey", pbkrtest.limit = 9548,
limit = 9548)
emmeans(m0.2, list(pairwise ~ Group), adjust = "tukey", pbkrtest.limit = 9548,
lmerTest.limit = 9548)
?emmeans
emmeans(m0.2, list(pairwise ~ Group), adjust = "bonferroni", pbkrtest.limit = 9548,
lmerTest.limit = 9548)
emmeans(m0.2, list(pairwise ~ Group), adjust = "bonferroni",
lmerTest.limit = 9548)
difflsmeans(model, test.effs = "Group", ddf="Kenward-Roger")
difflsmeans(m0.2, test.effs = "Group", ddf="Kenward-Roger")
install.packages("pbkrtest")
library(pbkrtest)
difflsmeans(m0.2, test.effs = "Group", ddf="Kenward-Roger")
